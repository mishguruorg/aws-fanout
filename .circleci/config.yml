version: 2
jobs:
    setup:
      working_directory: "~/mish-build"
      docker:
        - image: "circleci/node:10.4.0"
      steps:
        - run:
            name: "Setup NPMRC"
            command: "echo $NPMRC > ~/.npmrc"
        - restore_cache:
            key: "v1-git-cache-{{ .Branch }}-{{ .Revision }}"
        - checkout
        - save_cache:
            key: "v1-git-cache-{{ .Branch }}-{{ .Revision }}"
            paths:
              - ".git"
        - run:
            name: "NPM: Install dependencies"
            command: "npm ci"
        - save_cache:
            key: "v2-npm-install-cache-{{ checksum \"package.json\" }}"
            paths:
              - "./node_modules"
        - save_cache:
            key: "v1-npm-build-cache-{{ .Branch }}-{{ .Revision }}"
            paths:
              - "./dist"
    lint:
      working_directory: "~/mish-build"
      docker:
        - image: "circleci/node:10.4.0"
      steps:
        - restore_cache:
            key: "v1-git-cache-{{ .Branch }}-{{ .Revision }}"
        - checkout
        - restore_cache:
            key: "v2-npm-install-cache-{{ checksum \"package.json\" }}"
        - restore_cache:
            key: "v1-npm-build-cache-{{ .Branch }}-{{ .Revision }}"
        - run: "npm run lint"
    test:
      working_directory: "~/mish-build"
      docker:
        - image: "circleci/node:10.4.0"
        - image: "circleci/mysql:5.7"
          environment:
              MYSQL_DATABASE: "mishguru_test_db"
              MYSQL_USER: "ubuntu"
              MYSQL_PASSWORD: ""
      steps:
        - restore_cache:
            key: "v-git-cache-{{ .Branch }}-{{ .Revision }}"
        - checkout
        - restore_cache:
            key: "v2-npm-install-cache-{{ checksum \"package.json\" }}"
        - restore_cache:
            key: "v1-npm-build-cache-{{ .Branch }}-{{ .Revision }}"
        - run:
            name: "Wait for db"
            command: "dockerize -wait tcp://localhost:3306 -timeout 1m"
        - run: "npm run test -- --verbose"
workflows:
  version: 2
  build_and_test:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
